return(function(...)local A={}for E,r in ipairs({{1,7},{1;3};{4;7}})do while r[1]<r[2]do A[r[1]],A[r[2]],r[1],r[2]=A[r[2]],A[r[1]],r[1]+1,r[2]-1 end end local function E(E)return A[E+54495]end do local E=string.sub local r=string.char local Q=A local c=table.insert local g={N=37,S=2;I=61,s=30,["\056"]=56;W=31;["\054"]=1;e=32;p=15,["\052"]=53;j=41;n=59,k=24;U=26;Q=45;c=50;G=14;B=6,L=46,R=18;X=42,E=7;O=11,J=48,M=29,["\057"]=36;["\043"]=28;l=40,t=43,["\051"]=19;K=13;r=9;Y=38;C=51;h=60;b=17;["\048"]=16;["\055"]=22,A=49,i=21,["\049"]=58,q=10,f=33;["\047"]=63;x=54;g=34,["\053"]=55,o=4,u=62;D=25,Z=35;z=39,v=0;["\050"]=52;T=47;w=23;F=44;H=57;P=27,m=5,a=20,y=3;d=12;V=8}local H=table.concat local M=type local k=math.floor local f=string.len for A=1,#Q,1 do local a=Q[A]if M(a)=="\115\116\114\105\110\103"then local M=f(a)local n={}local F=1 local x=0 local N=0 while F<=M do local A=E(a,F,F)local Q=g[A]if Q then x=x+Q*64^(3-N)N=N+1 if N==4 then N=0 local A=k(x/65536)local E=k((x%65536)/256)local Q=x%256 c(n,r(A,E,Q))x=0 end elseif A=="\061"then c(n,r(k(x/65536)))if F>=M or E(a,F+1,F+1)~="\061"then c(n,r(k((x%65536)/256)))end break end F=F+1 end Q[A]=H(n)end end end return(function(A,Q,c,g,H,M,k,a,n,x,N,s,f,r,F,v)v,F,a,x,r,f,N,n,s=function(A)a[A]=a[A]-1 if 0==a[A]then a[A],f[A]=nil,nil end end,0,{},function(A)for E=1,#A,1 do a[A[E]]=a[A[E]]+1 end if c then local r=c(true)local Q=H(r)Q[E(-54488)],Q[E(-54489)],Q[E(-54494)]=A,N,function()return 871901 end return r else return g({},{[E(-54489)]=N;[E(-54488)]=A;[E(-54494)]=function()return 871901 end})end end,function(r,c,g,H)local a,k,f while r do f=c k=E(-54493)r=A[k]a=E(-54491)k=r(a)r=k(Q(f))k={}r=A[E(-54492)]end r=#H return Q(k)end,{},function(A)local E,r=1,A[1]while r do a[r],E=a[r]-1,1+E if a[r]==0 then a[r],f[r]=nil,nil end r=A[E]end end,function()F=1+F a[F]=1 return F end,function(A,E)local Q=x(E)local c=function(...)return r(A,{...},E,Q)end return c end return(s(3175357,{}))(Q(k))end)(getfenv and getfenv()or _ENV,unpack or table[E(-54490)],newproxy,setmetatable,getmetatable,select,{...})end)(...)