return(function(...)local g={}for O,v in ipairs({{1,7};{1;1},{2,7}})do while v[1]<v[2]do g[v[1]],g[v[2]],v[1],v[2]=g[v[2]],g[v[1]],v[1]+1,v[2]-1 end end local function O(O)return g[O-12069]end do local O=string.char local v={B=1,c=28;["\054"]=27;f=21,a=9,u=62,["\047"]=45,b=50,d=40,i=37;["\049"]=10,t=11,Z=24;C=46;G=25;n=18;S=8;v=41,s=56;Y=0,T=29;M=49;y=4,K=43;o=13,m=3,j=31,["\051"]=55,U=36,p=17;["\052"]=42;z=61;N=53,["\057"]=58,W=16;O=38;["\055"]=2;["\056"]=35;r=26;["\048"]=51,l=47;Q=22;R=19,A=12;I=57;g=20,V=33,L=39;X=34;P=59;w=52,e=54,q=15;k=63,F=48,J=23;["\053"]=5,h=7;E=30,["\043"]=14;D=32;["\050"]=60;H=44,x=6}local T=type local q=string.len local j=math.floor local R=string.sub local Q=table.concat local e=table.insert local H=g for g=1,#H,1 do local G=H[g]if T(G)=="\115\116\114\105\110\103"then local T=q(G)local W={}local D=1 local F=0 local r=0 while D<=T do local g=R(G,D,D)local q=v[g]if q then F=F+q*64^(3-r)r=r+1 if r==4 then r=0 local g=j(F/65536)local v=j((F%65536)/256)local T=F%256 e(W,O(g,v,T))F=0 end elseif g=="\061"then e(W,O(j(F/65536)))if D>=T or R(G,D+1,D+1)~="\061"then e(W,O(j((F%65536)/256)))end break end D=D+1 end H[g]=Q(W)end end end return(function(g,T,q,j,R,Q,e,W,F,r,v,n,a,G,H,D)r,v,H,W,a,G,n,F,D=function(g)local O,v=1,g[1]while v do G[v],O=G[v]-1,1+O if G[v]==0 then G[v],H[v]=nil,nil end v=g[O]end end,function(v,q,j,R)local G,e,H while v do G=O(12071)e=O(12076)v=g[e]e=v(G)H=q v=e(T(H))v=g[O(12070)]e={}end v=#R return T(e)end,{},function()D=D+1 G[D]=1 return D end,function(g,O)local T=F(O)local q=function(...)return v(g,{...},O,T)end return q end,{},function(g)G[g]=G[g]-1 if G[g]==0 then G[g],H[g]=nil,nil end end,function(g)for O=1,#g,1 do G[g[O]]=1+G[g[O]]end if q then local v=q(true)local T=R(v)T[O(12075)],T[O(12073)],T[O(12072)]=g,r,function()return-2268576 end return v else return j({},{[O(12073)]=r,[O(12075)]=g;[O(12072)]=function()return-2268576 end})end end,0 return(a(11205718,{}))(T(e))end)(getfenv and getfenv()or _ENV,unpack or table[O(12074)],newproxy,setmetatable,getmetatable,select,{...})end)(...)